{"version":3,"sources":["serviceWorker.js","data/app_data.js","components/content/selecticon.js","components/common/search.js","data/color_data.js","components/common/color_component.js","components/content/addicon.js","components/content/editInfo.js","components/content/removeicon.js","components/content/iconBox.js","components/content/control.js","index.js"],"names":["Boolean","window","location","hostname","match","iconList","id","tagName","color","Selecticon","props","select","current_data","filter_Tagrepeat","newData","setState","random","push","selectIcon","data1","data2","some","el","edit","data","setEdit_module","getEdit_info","state","tagList","this","map","index","key","className","style","background","onClick","e","EditOutlined","CheckOutlined","length","includes","React","Component","Searchicon","setInput","addstate","setModule","getInput","target","value","inputValue","placeholder","onInput","PlusCircleOutlined","colorList","Colorcomponent","selectColor","select_color","getColor","getEdit_color","color_lis","defaultColor","Addicon","addTag","newTag_data","Math","floor","textInfo","colorInfo","setTagmenu","document","getElementsByClassName","getColor_info","val","type","Editinfo","submitInfo","tagInfo","querySelector","editColor","edit_index","filter","splice","closeEdit_module","update_tag","swRemove_module","setRemove_module","CloseOutlined","danger","Removeicon","closeRemove_module","remove","removeIndex","removeInfo","update_removeTag","Iconbox","addState","editState","removeState","inputInfo","display","active_keys","getSelect","newTags","Control","openIcon","iconBox_keys","getSelectIcon","tags","close","current_tag","filter_Tagfn","newArr","tag","newTag","console","log","ArrowDownOutlined","CloseCircleOutlined","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e12024f5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nlet iconList = [\r\n    {\r\n        id: 1,\r\n        tagName: '测试',\r\n        color: '#f50'\r\n    },\r\n    {\r\n        id: 2,\r\n        tagName: '测试2',\r\n        color: \"#2db7f5\"\r\n    },\r\n    {\r\n        id: 3,\r\n        tagName: '测试3',\r\n        color: \"#87d068\"\r\n    },\r\n]\r\n\r\n\r\nexport { iconList }","import React from 'react'\r\nimport '../../css/selecticon.scss'\r\nimport { EditOutlined, CheckOutlined } from '@ant-design/icons'\r\nimport { iconList } from '../../data/app_data'\r\nclass Selecticon extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            iconList: [],\r\n        }\r\n    }\r\n    render() {\r\n        let tagList = this.state.iconList.map((el, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <span className='circles' style={{ background: el.color }}></span>\r\n                    <span onClick={(e) => this.select(el, e)}>{el.tagName}</span>\r\n                    <EditOutlined className='icons-two' onClick={(e) => this.edit(el)} />\r\n                    <CheckOutlined className={this.props.newData.length > 0 && this.props.newData.includes(el) ? 'icons-three' : 'hide'} />\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className='select_box'>\r\n                <ul className='tags'>\r\n                    {tagList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    select = (current_data) => {\r\n\r\n        let repeat_keys = this.filter_Tagrepeat(current_data, this.props.newData)\r\n        if (repeat_keys === true) {\r\n            return false\r\n        }\r\n        this.setState({\r\n            random: this.props.newData.push(current_data),\r\n        })\r\n        this.props.selectIcon(this.props.newData)\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            iconList: iconList,\r\n        })\r\n    }\r\n    //筛选重复选中\r\n    filter_Tagrepeat = (data1, data2) => {\r\n        let repeat_keys = ''\r\n        repeat_keys = data2.some(el => {\r\n            return el.id === data1.id\r\n        })\r\n        return repeat_keys\r\n    }\r\n    //修改数据\r\n    edit = (data) => {\r\n        this.props.setEdit_module(true)  \r\n        this.props.getEdit_info(data)\r\n    }\r\n}\r\n\r\nexport default Selecticon","import React from 'react'\r\nimport '../../css/searchicon.scss'\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\nclass Searchicon extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            inputValue: '123'\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='icon-search'>\r\n                <input placeholder=\"搜索标签\" className='input-control' onInput={(e) => this.setInput(e)}  />\r\n                <PlusCircleOutlined className='icons' />\r\n            </div>\r\n        )\r\n    }\r\n    //监听输入内容改变创建模块状态\r\n    setInput = (e) => {\r\n        if (this.props.addstate !== true) {   //避免重复触发改变状态\r\n            this.props.setModule(true)\r\n        }\r\n        this.props.getInput(e.target.value)\r\n    }\r\n}\r\nexport default Searchicon","let colorList = [\r\n    {\r\n        id:1,\r\n        color:'#f50'\r\n    },\r\n    {\r\n        id:2,\r\n        color:'#2db7f5'\r\n    },\r\n    {\r\n        id:3,\r\n        color:'#87d068'\r\n    },\r\n    {\r\n        id:4,\r\n        color:'#6F2BD5'\r\n    },\r\n    {\r\n        id:5,\r\n        color:'#F7C709'\r\n    },\r\n    {\r\n        id:6,\r\n        color:'#09F7C7'\r\n    }\r\n]\r\n\r\nexport default  colorList","import React from 'react'\r\nimport colorList from '../../data/color_data'\r\nimport '../../css/color_cop.scss'\r\nimport { CheckOutlined } from '@ant-design/icons'\r\nclass Colorcomponent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            select_color: ''\r\n        }\r\n    }\r\n    render() {\r\n        let color_lis = colorList.map(el => {\r\n            return (\r\n                <li style={{ background: el.color }} key={el.id} onClick={(e) => this.selectColor(el)}>\r\n                    <CheckOutlined className={this.state.select_color === el.color ? 'color-icons' : 'hide'} />\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <ul className='color_box'>\r\n                {color_lis}\r\n            </ul>\r\n        )\r\n    }\r\n    //选择颜色\r\n    selectColor = (el) => {\r\n        this.setState({\r\n            select_color: el.color\r\n        })\r\n        if (this.props.getColor) {\r\n            this.props.getColor(el.color)\r\n        }\r\n        if(this.props.getEdit_color) {\r\n            this.props.getEdit_color(el.color)\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.defaultColor){\r\n            this.setState({\r\n                select_color:this.props.defaultColor\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default Colorcomponent","import React from 'react'\r\nimport '../../css/addicon.scss'\r\nimport { Button } from 'antd';\r\nimport Colorcomponent from '../common/color_component'\r\nimport { iconList } from '../../data/app_data'\r\nclass Addicon extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            colorInfo: \" \"\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='addicon_box'>\r\n                <Colorcomponent getColor={this.getColor_info} />\r\n                <Button type=\"primary\" className='addbtn' onClick={this.addTag}>创建</Button>\r\n            </div>\r\n        )\r\n    }\r\n    //创建tag标签\r\n    addTag = () => {\r\n        let id = Math.floor(Math.random()*10+4)\r\n        let newTag_data = {\r\n            id,\r\n            tagName: this.props.textInfo,\r\n            color: this.state.colorInfo\r\n        }\r\n        this.props.setTagmenu(newTag_data)\r\n        this.props.setModule(false)\r\n        document.getElementsByClassName('input-control')[0].value = ''\r\n        iconList.push(newTag_data)\r\n    }\r\n    //获取颜色信息\r\n    getColor_info = (val) => {\r\n        this.setState({\r\n            colorInfo: val\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default Addicon","import React from 'react'\r\nimport '../../css/editinfo.scss'\r\nimport { Divider, Button } from 'antd';\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport Colorcomponent from '../common/color_component'\r\nimport { iconList } from '../../data/app_data'\r\nclass Editinfo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editColor: \"\"\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='edit_box'>\r\n                <div className='edit_title'>编辑标签\r\n                    <CloseOutlined className='edit-icons' onClick={this.closeEdit_module} />\r\n                </div>\r\n                <Divider />\r\n                <input className='edit-input' placeholder='请输入标签名' />\r\n                <Colorcomponent getEdit_color={this.getEdit_color} defaultColor={this.props.tagInfo.color} />\r\n                <div className='edit-btns'>\r\n                    <Button danger onClick={this.swRemove_module}>删除</Button>\r\n                    <Button type='primary' onClick={this.submitInfo}>完成</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    //提交修改后的数据\r\n    submitInfo = () => {\r\n        let newTag_data = {\r\n            id: this.props.tagInfo.id,\r\n            tagName: document.querySelector('.edit-input').value,\r\n            color: this.state.editColor ? this.state.editColor : this.props.tagInfo.color\r\n        }\r\n        let edit_index = ''\r\n        iconList.filter((el, index) => {\r\n            if (el.id === newTag_data.id) {\r\n                edit_index = index\r\n            }\r\n        })\r\n        iconList.splice(edit_index, 1, newTag_data)\r\n        this.closeEdit_module()\r\n        this.props.update_tag(newTag_data)\r\n    }\r\n    //获取修改后的颜色\r\n    getEdit_color = (val) => {\r\n        this.setState({\r\n            editColor: val\r\n        })\r\n    }\r\n    //关闭当前模块\r\n    closeEdit_module = () => {\r\n        this.props.setEdit_module(false)\r\n    }\r\n    componentDidMount() {\r\n        document.querySelector('.edit-input').value = this.props.tagInfo.tagName\r\n    }\r\n\r\n    //切换到删除模块\r\n    swRemove_module = () => {\r\n        this.closeEdit_module()\r\n        this.props.setRemove_module(true)\r\n    }\r\n}\r\nlet newTag_list = []\r\nexport { newTag_list }\r\n\r\nexport default Editinfo","import React from 'react'\r\nimport { Divider, Button } from 'antd';\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport '../../css/removeicon.scss'\r\nimport { iconList } from '../../data/app_data'\r\nclass Removeicon extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='remove_box'>\r\n                <div className='remove_title'>删除标签\r\n                    <CloseOutlined className='remove-icons' onClick={this.closeRemove_module} />\r\n                </div>\r\n                <Divider />\r\n                <div className='tip_text'>\r\n                    确认删除标签?\r\n                </div>\r\n                <Button className='remove-btn' type=\"primary\" danger onClick={this.remove}>删除</Button>\r\n            </div>\r\n        )\r\n    }\r\n    //关闭当前模块\r\n    closeRemove_module = () => {\r\n        this.props.setRemove_module(false)\r\n    }\r\n    //删除\r\n    remove = () => {\r\n        let removeIndex = ''\r\n        iconList.some((el, index) => {\r\n            if (el.id === this.props.removeInfo.id) {\r\n                removeIndex = index\r\n            }\r\n        })\r\n        iconList.splice(removeIndex,1)\r\n        this.props.update_removeTag(this.props.removeInfo)\r\n        this.closeRemove_module()\r\n    }\r\n}\r\n\r\nexport default Removeicon","import React from 'react'\r\nimport '../../css/iconbox.scss'\r\nimport Selecticon from './selecticon'\r\nimport Searchicon from '../common/search'\r\nimport Addicon from './addicon'\r\nimport Editinfo from './editInfo'\r\nimport Removeicon from './removeicon'\r\nclass Iconbox extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            addState: false,\r\n            editState: false,\r\n            removeState: false,\r\n            inputInfo: \"\",\r\n            tagInfo: \"\"\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.addState) {    //进入添加模块\r\n            return (\r\n                <div className='icon_box' style={{ display: this.props.active_keys }}>\r\n                    <Searchicon setModule={this.setModule} addstate={this.state.addState} getInput={this.getInput} />\r\n                    <Addicon setTagmenu={this.props.setTagmenu} textInfo={this.state.inputInfo} setModule={this.setModule} />\r\n                </div>\r\n            )\r\n        } else if (this.state.editState) {   //进入修改模块\r\n            return (\r\n                <div className='icon_box' style={{ display: this.props.active_keys }}>\r\n                    <Editinfo setEdit_module={this.setEdit_module} tagInfo={this.state.tagInfo} update_tag={this.props.update_tag} setRemove_module={this.setRemove_module}/>\r\n                </div>\r\n            )\r\n        } else if (this.state.removeState) {\r\n            return (\r\n                <div className='icon_box' style={{ display: this.props.active_keys }}>\r\n                    <Removeicon setRemove_module={this.setRemove_module} removeInfo = {this.state.tagInfo} update_removeTag={this.props.update_removeTag}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (    //进入选择模块\r\n                <div className='icon_box' style={{ display: this.props.active_keys }}>\r\n                    <Searchicon setModule={this.setModule} addstate={this.state.addState} getInput={this.getInput} />\r\n                    <Selecticon selectIcon={this.props.getSelect} newData={this.props.newTags} setEdit_module={this.setEdit_module} getEdit_info={this.getEdit_info} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    //改变添加模块状态\r\n    setModule = (val) => {\r\n        this.setState({\r\n            addState: val\r\n        })\r\n    }\r\n    //改变修改模块状态\r\n    setEdit_module = (val) => {\r\n        this.setState({\r\n            editState: val\r\n        })\r\n    }\r\n    //改变删除模块状态\r\n    setRemove_module = (val) => {\r\n        this.setState({\r\n            removeState: val\r\n        })\r\n    }\r\n    //获取输入框信息\r\n    getInput = (val) => {\r\n        this.setState({\r\n            inputInfo: val\r\n        })\r\n    }\r\n    //获取需要修改的信息\r\n    getEdit_info = (val) => {\r\n        this.setState({\r\n            tagInfo: val\r\n        })\r\n    }\r\n}\r\n\r\nexport default Iconbox","import React from 'react'\r\nimport '../../css/control.scss'\r\nimport IconBox from './iconBox'\r\nimport { CloseCircleOutlined, ArrowDownOutlined } from '@ant-design/icons'\r\n\r\nclass Control extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            iconBox_keys: true,\r\n            display: 'none',\r\n            tags: []\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.tags.length <= 0) {\r\n            return (\r\n                <div className='box'>\r\n                    <div><ArrowDownOutlined />点击此处</div>\r\n                    <div className='activeColor' onClick={this.openIcon} >添加标签</div>\r\n                    <IconBox active_keys={this.state.display} getSelect={this.getSelectIcon} newTags={this.state.tags} setTagmenu={this.setTagmenu} update_tag={this.update_tag} update_removeTag={this.update_removeTag}></IconBox>\r\n                </div>\r\n            )\r\n        } else {\r\n            let tagList = this.state.tags.map((el, index) => {\r\n                return (\r\n                    <li key={index} className='tag_style' style={{ background: el.color }}>{el.tagName}\r\n                        <CloseCircleOutlined className='close' onClick={(e) => this.close(el, e)} />\r\n                    </li>\r\n                )\r\n            })\r\n            return (\r\n                <div className='box'>\r\n                    <ul className='tagMenu'>{tagList}</ul>\r\n                    <IconBox active_keys={this.state.display} getSelect={this.getSelectIcon} newTags={this.state.tags} setTagmenu={this.setTagmenu} update_tag={this.update_tag} update_removeTag={this.update_removeTag}></IconBox>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    //打开搜索框\r\n    openIcon = () => {\r\n        this.setState({\r\n            iconBox_keys: !this.state.iconBox_keys,\r\n            display: this.state.iconBox_keys ? 'block' : 'none'\r\n        })\r\n    }\r\n\r\n    //获取选中的标签\r\n    getSelectIcon = (data) => {\r\n        this.setState({\r\n            tags: data\r\n        })\r\n    }\r\n    //关闭标签\r\n    close = (current_tag) => {\r\n        this.filter_Tagfn(current_tag)\r\n    }\r\n\r\n    //筛选标签方法\r\n    filter_Tagfn = (data) => {\r\n        let newArr = this.state.tags.filter(el => {\r\n            if (el.id !== data.id) {\r\n                return el\r\n            }\r\n        })\r\n        this.setState({\r\n            tags: newArr\r\n        })\r\n    }\r\n\r\n    //创建一个标签并添加到tag菜单上\r\n    setTagmenu = (val) => {\r\n        this.setState({\r\n            tag: this.state.tags.push(val)\r\n        })\r\n    }\r\n    //更新修改后的tag菜单\r\n    update_tag = (val) => {\r\n        if (this.state.tags.length >= 0) {\r\n            let newTag = this.state.tags.map(el => {\r\n                if (el.id === val.id) {\r\n                    return el = val\r\n                }\r\n                return el\r\n            })\r\n            this.setState({\r\n                tags: newTag\r\n            })\r\n        }\r\n    }\r\n    //更新删除后的tag菜单\r\n    update_removeTag = (val) => {\r\n        if (this.state.tags.length >= 0) {\r\n            let newTag = this.state.tags.filter(el => {\r\n                if (el.id !== val.id) {\r\n                    return el\r\n                }\r\n            })\r\n            console.log(newTag)\r\n            this.setState({\r\n                tags: newTag\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Control","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Control from './components/content/control';\nimport 'antd/dist/antd.css';\nimport './app.css'\n\nReactDOM.render(\n  <Control />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}